// 初始化基本类型集合
        BASIC_TYPES.add("int");
        BASIC_TYPES.add("long");
        BASIC_TYPES.add("short");
        BASIC_TYPES.add("float");
        BASIC_TYPES.add("double");
        BASIC_TYPES.add("boolean");
        BASIC_TYPES.add("char");
        BASIC_TYPES.add("byte");
        BASIC_TYPES.add("int[]");
        BASIC_TYPES.add("int[][]");
        BASIC_TYPES.add("long[]");
        BASIC_TYPES.add("float[]");
        BASIC_TYPES.add("double[]");
        BASIC_TYPES.add("boolean[]");
        BASIC_TYPES.add("char[]");
        BASIC_TYPES.add("byte[]");
        BASIC_TYPES.add("java.lang.Integer");
        BASIC_TYPES.add("java.lang.Long");
        BASIC_TYPES.add("java.lang.Float");
        BASIC_TYPES.add("java.lang.Double");
        BASIC_TYPES.add("java.lang.Boolean");
        BASIC_TYPES.add("java.lang.Char");
        BASIC_TYPES.add("java.lang.Byte");
        BASIC_TYPES.add("java.lang.Short");
        BASIC_TYPES.add("java.lang.String");
        BASIC_TYPES.add("java.util.Map<java.lang.String>");
        BASIC_TYPES.add("java.lang.Integer[]");
        BASIC_TYPES.add("java.lang.Long[]");
        BASIC_TYPES.add("java.lang.Float[]");
        BASIC_TYPES.add("java.lang.Double[]");
        BASIC_TYPES.add("java.lang.Boolean[]");
        BASIC_TYPES.add("java.lang.Char[]");
        BASIC_TYPES.add("java.lang.Byte[]");
        BASIC_TYPES.add("java.lang.Short[]");
        BASIC_TYPES.add("java.lang.String[]");
        BASIC_TYPES.add("java.lang.ClassLoader");
        BASIC_TYPES.add("java.lang.Object");
        BASIC_TYPES.add("java.lang.Class<?>");
        BASIC_TYPES.add("java.lang.reflect.Field");
        BASIC_TYPES.add("io.netty.buffer.ByteBuf");
        BASIC_TYPES.add("java.util.HashMap<java.lang.String>");
        BASIC_TYPES.add("ServingStatus");
        BASIC_TYPES.add("java.lang.StringBuilder");
        BASIC_TYPES.add("java.nio.ByteBuffer");
        BASIC_TYPES.add("java.util.List<java.lang.Object>");
        BASIC_TYPES.add("java.util.Set");
        BASIC_TYPES.add("java.util.Iterator");
        BASIC_TYPES.add("java.util.Set<?>");
        BASIC_TYPES.add("java.util.Iterator<?>");
        BASIC_TYPES.add("java.util.Set<javax.lang.model.type.DeclaredType>");
        BASIC_TYPES.add("javax.lang.model.element.ExecutableElement");
        BASIC_TYPES.add("javax.lang.model.element.TypeElement");
        BASIC_TYPES.add("java.lang.Thread");
        BASIC_TYPES.add("java.util.concurrent.ThreadPoolExecutor");
        BASIC_TYPES.add("java.util.concurrent.ExecutorService");
        BASIC_TYPES.add("java.lang.Class");
        BASIC_TYPES.add("java.lang.reflect.Constructor<?>");
        BASIC_TYPES.add("java.lang.reflect.Method");
        BASIC_TYPES.add("org.apache.dubbo.common.compiler.support.CtClassBuilder");
        BASIC_TYPES.add("javassist.CtClass");
        BASIC_TYPES.add("javassist.ClassPool");
        BASIC_TYPES.add("java.util.List<java.lang.String>");
        BASIC_TYPES.add("java.util.Map<java.lang.String>>");
        BASIC_TYPES.add("HealthCheckRequest");
        BASIC_TYPES.add("java.util.Map<java.lang.Thread>");
        BASIC_TYPES.add("java.util.Set<java.lang.Object>");
        BASIC_TYPES.add("java.lang.Exception");
        BASIC_TYPES.add("java.lang.Object[]");
        BASIC_TYPES.add("java.util.HashSet<java.lang.Object>");
        BASIC_TYPES.add("java.util.List");
        BASIC_TYPES.add("java.io.IOException");
        BASIC_TYPES.add("java.util.Map<java.lang.String[]>");
        BASIC_TYPES.add("java.util.List<javax.lang.model.type.DeclaredType>");
        BASIC_TYPES.add("java.util.Iterator<javax.lang.model.element.TypeElement>");
        BASIC_TYPES.add("java.util.Set<? extends javax.lang.model.type.TypeMirror>");
        BASIC_TYPES.add("java.util.Iterator<? extends javax.lang.model.type.TypeMirror>");
        BASIC_TYPES.add("java.util.Map");
        BASIC_TYPES.add("java.util.List<java.util.Map>");
        BASIC_TYPES.add("java.io.ByteArrayOutputStream");
        BASIC_TYPES.add("java.io.ObjectOutputStream");
        BASIC_TYPES.add("java.lang.reflect.Constructor<?>[]");
        BASIC_TYPES.add("java.util.List<java.lang.Class<?>>");
        BASIC_TYPES.add("java.util.Deque");
        BASIC_TYPES.add("java.util.Collection");
        BASIC_TYPES.add("java.util.NavigableSet");
        BASIC_TYPES.add("T[]");
        BASIC_TYPES.add("java.lang.NumberFormatException");
        BASIC_TYPES.add("java.net.UnknownHostException");
        BASIC_TYPES.add("java.lang.IllegalArgumentException");
        BASIC_TYPES.add("java.util.concurrent.ConcurrentHashMap<java.lang.String>");
        BASIC_TYPES.add("java.util.Properties");
        BASIC_TYPES.add("java.util.Set<java.lang.String>");
        BASIC_TYPES.add("java.lang.ThreadGroup");
        BASIC_TYPES.add("java.util.Map<java.lang.ClassLoader>");
        BASIC_TYPES.add("java.lang.reflect.Type[]");
        BASIC_TYPES.add("java.lang.reflect.Constructor");
        BASIC_TYPES.add("java.util.concurrent.atomic.AtomicInteger");
        BASIC_TYPES.add("ConcurrentHashMap<java.lang.String, java.util.Set<Channel>>");
        BASIC_TYPES.add("Map<java.lang.String, java.lang.String>");